# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: '<MYPROJECT>'

# The runtime the application uses.
type: 'php:7.1'

# Configuration of the build of this application.
build:
    flavor: none

variables:
    php:
        memory_limit: 256M

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'mysqldb:mysql'
#    solr: 'solrsearch:solr'
#    redis: 'rediscache:redis'

# The configuration of app when it is exposed to the web.
web:
    # Specific parameters for different URL prefixes.
    locations:
        '/':
            # The folder from which to serve static assets, for this location.
            #
            # This is a filesystem path, relative to the application root.
            root: 'web'

            # How long to allow static assets from this location to be cached.
            #
            # Can be a time in seconds, or -1 for no caching. Times can be
            # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
            # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
            # 365 days).
            expires: 5m

            # Whether to forward disallowed and missing resources from this
            # location to the application.
            #
            # Can be true, false or a URI path string.
            passthru: '/index.php'

            # Deny access to static files in this location.
            allow: false

            # Rules for specific URI patterns.
            rules:
                # Allow access to common static files.
                '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
                    allow: true
                '^/robots\.txt$':
                    allow: true
                '^/sitemap\.xml$':
                    allow: true

        '/sites/default/files':
            # Allow access to all files in the public files directory.
            allow: true
            expires: 5m
            passthru: '/index.php'
            root: 'web/sites/default/files'

            # Do not execute PHP scripts.
            scripts: false

            rules:
                # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
                '^/sites/default/files/(css|js)':
                    expires: 2w

        '/kalastatic':
            allow: true
            scripts: true
            passthru: true
            index:
                - index.html
            root: 'web/kalastatic'

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
# The keys are directory paths relative to the application root. The values are a
# mount definition.
mounts:
    # Note that the Platform.sh settings file overrides the Drupal "temporary
    # files directory" setting to point at /app/tmp instead of whatever is
    # specified in the configuration files.
    'tmp':
        source: local
        source_path: tmp
    'web/sites/default/files':
        source: local
        source_path: public
    'private':
        source: local
        source_path: private

# The hooks executed at various points in the lifecycle of the application.
hooks:
    # In enterprise environments, only the "build" hook has access to build
    # tools like composer and npm. Plus, the filesystem becomes read-only after
    # this phase.
    build: |
        # Update node.js (and npm) to latest stable version before building.
        # @see https://docs.platform.sh/languages/nodejs/nvm.html
        sh scripts/install-nodejs.sh

        # Don't install dev dependencies in the live and test environments.
        COMPOSER_INSTALL_FLAGS="--no-interaction --optimize-autoloader"
        if [ "$PLATFORM_BRANCH" = "production" ] || [ "$PLATFORM_BRANCH" = "staging" ]; then
            COMPOSER_INSTALL_FLAGS="$COMPOSER_INSTALL_FLAGS --no-dev"
        fi
        composer install $COMPOSER_INSTALL_FLAGS
        composer test

    # The deploy hook runs after your application has been deployed and started.
    deploy: |
        unset NPM_CONFIG_PREFIX
        nvm use stable
        cd web
        drush -y cache-rebuild
        drush -y updatedb
        drush -y config-import
        drush -y cache-rebuild
        drush -y entity-updates

# The configuration of scheduled execution.
crons:
    drupal:
        spec: '*/20 * * * *'
        cmd: 'cd web ; drush core-cron'
