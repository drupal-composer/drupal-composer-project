# @file
# Drupal VM configuration overrides.

# Specify basic virtual machine settings.
vagrant_hostname: CHANGEME.dvm
vagrant_machine_name: drupalvm-CHANGEME
vagrant_ip: 192.168.88.88

# Configure Drupal VM to run via composer.
# @see http://docs.drupalvm.com/en/latest/deployment/composer-dependency
drupal_build_composer_project: false
drupal_build_composer: true
drupal_composer_path: false
drupal_composer_install_dir: "/var/www/drupalvm"
drupal_composer_dependencies: []
drupal_core_path: "{{ drupal_composer_install_dir }}/web"
drupal_install_site: true
drupal_enable_modules: [ 'kalaconfig' ]

# Uncomment this once you have committed an acceptable set of starting config.
# drupal_install_profile: config_installer

# Set preferred tools and versions.
drupalvm_webserver: nginx
nodejs_version: "6.x"
php_version: "7.0"

# Use Host Manager instead of Hosts Updater.
vagrant_plugins:
  - name: vagrant-vbguest
  - name: vagrant-hostmanager

# In order to bump the fastcgi buffer size, we have to set the whole variable.
nginx_hosts:
  - server_name: "{{ drupal_domain }} www.{{ drupal_domain }}"
    root: "{{ drupal_core_path }}"
    is_php: true
    extra_parameters: |
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;

  - server_name: "adminer.{{ vagrant_hostname }}"
    root: "{{ adminer_install_dir }}"
    is_php: true

  - server_name: "xhprof.{{ vagrant_hostname }}"
    root: "{{ php_xhprof_html_dir }}"
    is_php: true

  - server_name: "pimpmylog.{{ vagrant_hostname }}"
    root: "{{ pimpmylog_install_dir }}"
    is_php: true

  - server_name: "{{ vagrant_ip }} dashboard.{{ vagrant_hostname }}"
    root: "{{ dashboard_install_dir }}"
    is_php: true

# Enable and configure system packages.
php_xdebug_cli_enable: 0
installed_extras:
  - adminer
  - blackfire
  - drupalconsole
  - drush
  # - elasticsearch
  # - java
  - mailhog
  # - memcached
  # - newrelic
  - nodejs
  - pimpmylog
  - redis
  # - ruby
  # - selenium
  - solr
  # - tideways
  - upload-progress
  - varnish
  - xdebug
  - xhprof
